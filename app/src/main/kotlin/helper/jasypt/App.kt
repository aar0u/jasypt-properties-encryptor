/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package helper.jasypt

import com.fasterxml.jackson.databind.ObjectMapper
import com.fasterxml.jackson.dataformat.yaml.YAMLFactory
import java.io.File
import java.io.FileOutputStream
import java.util.*

class App {
    val text: String
        get() {
            return "Encrypting"
        }
}

fun main(args: Array<String>) {
    val password = args[0]
    val input = args[1]
    val output = "${input}_enc"

    println("${App().text} $input")

    val mapper = ObjectMapper(YAMLFactory())

    val value = mapper.readTree(
        ClassLoader.getSystemResource("config.yaml").readBytes()
    )

    val arrNode = value.get("keywords")

    val encryptor = Encryptor().getEncryptor(password)

    val props = File(input).bufferedReader().use {
        Properties().apply { load(it) }
    }

    for (prop in props) {
        if (prop.key.toString() == "jasypt.encryptor.password") {
            prop.setValue(password)
            continue
        }
        for (keyword in arrNode) {
            if (prop.key.toString().contains(keyword.asText(), ignoreCase = true)) {
                val encrypted = encryptor.encrypt(prop.value.toString())
                println(" ${prop.key}: ${prop.value} -> $encrypted")
                prop.setValue(encrypted)
            }
        }
    }
    props.store(FileOutputStream(output), null)
}